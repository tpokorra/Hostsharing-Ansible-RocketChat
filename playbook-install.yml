---
- hosts: rocketchat
  become_user: "{{pac}}-{{user}}"
  vars:
    ansible_python_interpreter: /usr/bin/python3
    # see https://docs.ansible.com/ansible/latest/user_guide/become.html#risks-of-becoming-an-unprivileged-user
    ansible_common_remote_group: "{{pac}}"
    ansible_remote_tmp: ~/.ansible/tmp

  tasks:
  - name: Create user, and domain
    import_tasks: tasks/hs_basis.yml

  #################################
  ## create directories
  #################################
  - name: create directory etc
    become: yes
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/etc"
      state: directory
  - name: create directory bin
    become: yes
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/bin"
      state: directory
  - name: create directory var/tmp
    become: yes
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/tmp"
      state: directory
  - name: create directory var/log
    become: yes
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/log"
      state: directory
  - name: create directory var/run
    become: yes
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/run"
      state: directory

  ##################################
  ## other software configuration
  ##################################
  - name: upload monit configuration
    become: yes
    template: dest="/home/pacs/{{pac}}/users/{{user}}/.monitrc" src="templates/monitrc" mode=0600 force=no

  - name: upload logrotate configuration
    become: yes
    template: dest="/home/pacs/{{pac}}/users/{{user}}/.logrotate" src="templates/logrotate" mode=0600 force=no

  #################################
  ## install requirements
  #################################
  - name: Install node.js
    import_tasks: tasks/hs_nodejs.yml
  - name: Install mongodb
    import_tasks: tasks/hs_mongodb.yml

  - name: start mongodb and initialise replica set
    become: yes
    shell: |
      ./mongod-start.sh || exit -1
      sleep 10
      ./mongo mongodb://127.0.0.1:{{mongod_port}} --eval "printjson(rs.initiate({ _id: 'rs01', members: [ { _id: 0, host: '127.0.0.1:{{mongod_port}}' } ]}))"
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/bin"

  - name: Install meteor
    become: yes
    shell: |
      source ~/.profile
      npm install -g meteor || exit -1
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/"
      creates: "/home/pacs/{{pac}}/users/{{user}}/node_modules/.bin/meteor-installer"

  ##################################
  ## install rocketchat
  ##################################

  - name: download rocketchat
    become: yes
    unarchive:
      src: https://releases.rocket.chat/{{rocketchat_version}}/download
      remote_src: yes
      dest: "/home/pacs/{{pac}}/users/{{user}}/var/tmp"

  - name: Install dependencies
    become: yes
    shell: |
      source ~/.profile
      npm i || exit -1
      mv /home/pacs/{{pac}}/users/{{user}}/var/tmp/bundle /home/pacs/{{pac}}/users/{{user}}/Rocket.Chat
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/var/tmp/bundle/programs/server/"
      creates: /home/pacs/{{pac}}/users/{{user}}/Rocket.Chat

  - name: upload start script
    become: yes
    template: dest="/home/pacs/{{pac}}/users/{{user}}/bin/rocketchat-start.sh" src="templates/rocketchat-start.sh" mode=0700
  - name: upload stop script
    become: yes
    template: dest="/home/pacs/{{pac}}/users/{{user}}/bin/rocketchat-stop.sh" src="templates/rocketchat-stop.sh" mode=0700

  ########################
  ## setup the apache site
  ########################

  - name: upload htdocs-ssl htaccess file
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl/.htaccess" src="templates/htaccess"

  ####################################
  ## install cron jobs
  ####################################
  - name: start monit as cronjob
    become: yes
    cron:
      name: "start monit at reboot"
      special_time: reboot
      job: rm -f $HOME/var/run/* && /usr/bin/monit -c "$HOME/.monitrc"

  - name: run logrotate once a day
    become: yes
    cron:
      name: "logrotate"
      minute: "{{random_minute}}"
      hour: "1"
      job: "/usr/sbin/logrotate -s $HOME/.logrotate.state $HOME/.logrotate"

  ##############################################
  ## start services via monit
  ##############################################
  - name: start monit
    become: yes
    shell: |
      /usr/bin/monit -c ".monitrc"
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/"
      creates: "/home/pacs/{{pac}}/users/{{user}}/var/run/monit.id"

